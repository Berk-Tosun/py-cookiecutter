[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
name = "py-cookiecutter"
version = "v0.2.0"
description = "Python cookiecutter template with quality enforcements."
authors = [
    {name="Berk Tosun", email="tb.tosunberk@gmail.com"}
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.9"  # the minimum maintained version: https://devguide.python.org/versions/
dependencies = []  # should remain dependency free

[project.optional-dependencies]
dev = [
    "pip-tools",
    "pre-commit",
    "ruff > 0.1.2", # black formatter is also included
    "commitizen",
]

[tool.black]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
src = ["src"]
line-length = 88  # black style
target-version = "py39"
select = [
    "F",  # Errors detected by Pyflakes
    "E",  # Error detected by Pycodestyle
    "W",  # Warning detected by Pycodestyle
    "I",  # isort
    "D",  # pydocstyle
    "S",  # flake8-bandit
    "B",  # flake8-bugbear
    "TID",  # flake8-tidy-imports
    "C4",  # flake8-comprehensions
    "BLE",  # flake8-blind-except
    "UP",  # pyupgrade
    "RUF100",  # Report unused noqa directives
]
ignore = [
    # line too long -> we accept long comment lines; black gets rid of long code lines
    "E501",
    # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
    "E731",
    # Missing docstring in public package
    "D104",
    # Missing docstring in public module
    "D100",
    # Missing docstring in __init__
    "D107",
    # Errors from function calls in argument defaults. These are fine when the result is immutable.
    "B008",
    # __magic__ methods are are often self-explanatory, allow missing docstrings
    "D105",
    # first line should end with a period [Bug: doesn't work with single-line docstrings]
    "D400",
    # First line should be in imperative mood; try rephrasing
    "D401",
    ## Disable one in each pair of mutually incompatible rules
    # We donâ€™t want a blank line before a class docstring
    "D203",
    # We want docstrings to start immediately after the opening triple quote
    "D213",
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"docs/*" = ["I"]
"tests/*" = ["D"]
"*/__init__.py" = ["F401"]

[tool.pip-tools]
resolver = "backtracking"
quiet = true
allow_unsafe = true
max_rounds = 3
strip_extras = true

[tool.commitizen]
name = "cz_conventional_commits"
version = "v0.1.0"
version_files = [
    "pyproject.toml:version"
]
update_changelog_on_bump = true
annotated_tag = true
major_version_zero = true
